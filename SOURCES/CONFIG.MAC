;
;	Copyright (C) 2021 by Ladislau Szilagyi
;
;	RTM/Z80 system configuration settings
;
DEBUG		equ 0	;1=debug mode ON: verify task SP, task TCB, dealloc, lists, etc.
SIM		equ 1	;1=Runs under Z80SIM, 0=Runs on RC2014(SC108+SC110)
DIG_IO		equ 0	;1=RC2014 Digital I/O module is used
CMD		equ 0	;1=CON CMD task is included
RSTS		equ 0	;1=use RST for list routines (not for CP/M)
WATSON		equ 1	;1=Watson is used (not for CP/M)
C_LANG		equ 1	;1=Support for C language API
IO_COMM		equ 0	;1=Support for async communications I/O
MM		equ 0	;1=Memory Module is used, 0=SC108 is used
;
;	ROM/RAM options (only if SIM=0)
;
RAM128K		equ 1	;0=only 64K RAM, 1= 2 x 64K RAM available
ROM		equ 0	;1=sys code on ROM, 0=ROM not used
BOOT_CODE	equ 0	;1=bootstrap code included in code, 0=no bootstrap code
;
Z80SIM_CHECK    equ 0   ;1=check if CP/M executed on Z80SIM
;
BDOS		equ 0	;1=BDOS disk file support
;
;	WARNING : if SIM=0 and WATSON=1 ==> RAM128 must be set to 1
;		(on RC2014, Watson needs 128 KB RAM)
;
NODEBUG		equ	1-DEBUG	
NOSIM		equ	1-SIM
NODIG_IO	equ	1-DIG_IO
NOCMD		equ	1-CMD
NORSTS		equ	1-RSTS
NOWATSON	equ	1-WATSON
NOC_LANG	equ	1-C_LANG
NOIO_COMM	equ	1-IO_COMM
NOMM		equ	1-MM
NOROM		equ	1-ROM
NOBOOT_CODE	equ	1-BOOT_CODE
NORAM128K	equ	1-RAM128K
NOBDOS		equ	1-BDOS
;
SIO_RING	equ	NOSIM .and. IO_COMM
NOSIO_RING	equ	1-SIO_RING
;
;TRIGGERS	equ 0	;Digital I/O module triggers: 1=ON,0=OFF (in this version, MUST BE SET to 0)
;
;	Version
;
V_M	equ	1
V_m	equ	9
;
;Memory map for CP/M version
;
;	0100H - 7B00H	sys code & data, apps code & data
;	7B00H - 7D00H	HEX loader buffers
;	7D00H - 7E00H	CleanReqB
;	7E00H - 7F00H	SIO receive buffer
;	7F00H - 8000H	Tasks vectors, sys data
;	8000H - 9FFFH	Dynamic Memory
;	A000H - DC00H	reserved for ZSID.COM
;	DC00H - FFFFH	reserved for CP/M
;
;Memory map for RC2014 SC108 (LOW 64K RAM; HIGH 64K RAM = snapshot buffer)
;
;	0000H - 0100H	RSTs, sys code
;	0100H - D000H	INTs vector, sys code, apps code & read-only data
;	D000H - D100H	BSS: CleanReqB
;	D100H - D200H	BSS: SIO receive buffer
;	D200H - D400H	BSS: HEX loader buffers
;	D400H - DF29H	BSS: Watson pointers, sys & apps read-write data
;	DF29H - DFE3H	BSS: low - up routines (echo in Upper RAM)
;	DFE3H - DFE8H	BSS: RTM/Z80 exit code
;	DFE8H - E000H	BSS: regs & PC for breakpoint
;	E000H - FFFFH	Dynamic Memory
;
;       I/O opcodes
;
IO_IDLE         equ     0	;incoming input stored in SIO ring buffer
IO_WRITE        equ     1	;incoming input NOT stored in SIO ring buffer
IO_READ         equ     2       ;with echo, <CR> terminates read, null appended
IO_RAW_WRITE	equ	4	;incoming input stored in SIO ring buffer
IO_RAW_READ     equ     8       ;without echo, uses SIO receive buffer, timeout 
;
;       CTC ports (as in the RC2014 SIO/2 + CTCModule For RC2014)
;
CTC_0   equ     88H
CTC_1   equ     89H
CTC_2   equ     8AH
CTC_3   equ     8BH
;
;       SIO Ports (as in the RC2014 SIO/2 + CTCModule For RC2014)
;
SIO_A_C equ     80H
SIO_A_D equ     81H
SIO_B_C equ     82H
SIO_B_D equ     83H
;
BMEM_SIZE	equ	2000H	

B_H_SIZE	equ	6	;sizeof(bElement)

COND	SIM
BMEM_BASE	equ	08000H	;MUST be multiple of 0x2000
ENDC
COND	NOSIM
BMEM_BASE	equ	0E000H	;MUST be multiple of 0x2000 
ENDC

COND	ROM
_main	equ	2800H		;User code starts at 2800H
ENDC

;					SIM
COND	SIM

MACRO	SET_LEDS	value
ENDM

MACRO	OUT_LEDS	bitnr
ENDM

MACRO	TOGGLE_LEDS	bitnr
ENDM

;MACRO	TEST_TRIGGER	bitnr
;ENDM

;					SIM
ENDC

COND	SIM
TICS_PER_SEC	equ	100
ENDC
COND	NOSIM
TICS_PER_SEC	equ	200
ENDC

;
;	Addresses of RAM BSS routines
;
UP_TO_LOW_6W	equ	0DF4DH
UP_TO_LOW_4B	equ	0DF7CH
LOW_TO_UP_6W	equ	0DF91H
LOW_TO_UP_4B	equ	0DFC7H
RTM_EXIT	equ	0DFE3H

;	Address of Registers saved after a breakpoint
;	order: AF,BC,DE,HL,AF',BC',DE',HL',IX,IY,SP,PC
;
_PC	equ	0DFFEH
_REGS	equ	0DFE8H

